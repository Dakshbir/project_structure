{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Downloads\\\\wetransfer_project_structure_2025-01-20_1815\\\\project_structure\\\\frontend\\\\src\\\\components\\\\CurrentAQI.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import LocationPicker from './LocationPicker';\n// import { FaCloud } from 'react-icons/fa';\n\n// const CurrentAQI = () => {\n//   const [data, setData] = useState(null);\n//   const [location, setLocation] = useState(null);\n\n//   useEffect(() => {\n//     if (location) {\n//       fetch(`http://localhost:5000/api/current?lat=${location.lat}&lon=${location.lon}`)\n//         .then(res => res.json())\n//         .then(setData)\n//         .catch(console.error);\n//     }\n//   }, [location]);\n\n//   return (\n//     <div>\n//       <h2><FaCloud style={{ color: '#007bff', marginRight: '10px' }} />\n//       Current AQI</h2>\n//       <LocationPicker onLocationSelect={setLocation} />\n//       {data && (\n//         <div className=\"aqi-display\">\n//           <h3>AQI: {data.Final_AQI}</h3>\n//           <p>Category: {data.AQI_Category}</p>\n//           <div className=\"pollutants\">\n//             <h4>Pollutants</h4>\n//             <ul>\n//               <li>PM2.5: {data['PM2.5_AQI']}</li>\n//               <li>PM10: {data['PM10_AQI']}</li>\n//               <li>NO2: {data['NO2_AQI']}</li>\n//               <li>O3: {data['O3_AQI']}</li>\n//               <li>CO: {data['CO_AQI']}</li>\n//               <li>SO2: {data['SO2_AQI']}</li>\n//             </ul>\n//           </div>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n// export default CurrentAQI;\n\n// import React, { useState, useEffect } from 'react';\n// import LocationPicker from './LocationPicker'; // Location Picker component\n// import '../styles/main.css'; // Import the CSS for custom styling\n\n// const CurrentAQI = () => {\n//   const [data, setData] = useState(null);\n//   const [location, setLocation] = useState(null);\n\n//   useEffect(() => {\n//     if (location) {\n//       fetch(`http://localhost:5000/api/current?lat=${location.lat}&lon=${location.lon}`)\n//         .then(res => res.json())\n//         .then(setData)\n//         .catch(console.error);\n//     }\n//   }, [location]);\n\n//   return (\n//     <div>\n//       <h2>Current AQI</h2>\n//       <LocationPicker onLocationSelect={setLocation} />\n//       {data && (\n//         <div className=\"aqi-display\">\n//           <h3>AQI: {data.Final_AQI}</h3>\n//           <p>Category: {data.AQI_Category}</p>\n//           <div className=\"pollutants\">\n//             <h4>Pollutants</h4>\n//             <ul>\n//               <li>PM2.5: {data['PM2.5_AQI']}</li>\n//               <li>PM10: {data['PM10_AQI']}</li>\n//               <li>NO2: {data['NO2_AQI']}</li>\n//               <li>O3: {data['O3_AQI']}</li>\n//               <li>CO: {data['CO_AQI']}</li>\n//               <li>SO2: {data['SO2_AQI']}</li>\n//             </ul>\n//           </div>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default CurrentAQI;\n\nimport React, { useState, useEffect } from 'react';\nimport { BarChart, Bar, XAxis, YAxis, Tooltip, Legend, CartesianGrid, ResponsiveContainer } from 'recharts';\nimport '../styles/main.css'; // Update the path as necessary\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AQIVisualizer = () => {\n  _s();\n  const [aqiData, setAqiData] = useState([]);\n  const [query, setQuery] = useState('');\n\n  // Example function to fetch AQI data based on search query\n  const fetchAqiData = async () => {\n    if (query) {\n      // Assuming you're fetching data from an API\n      // Replace with the actual API call\n      const response = await fetch(`https://api.example.com/aqi?query=${query}`);\n      const data = await response.json();\n      setAqiData(data); // Assuming data is an array of AQI values\n    }\n  };\n\n  // Function to determine color based on AQI value\n  const getColorByAqi = aqi => {\n    if (aqi <= 50) {\n      return '#00E400'; // Good\n    } else if (aqi <= 100) {\n      return '#FFFF00'; // Moderate\n    } else if (aqi <= 150) {\n      return '#FF7E00'; // Unhealthy for Sensitive Groups\n    } else if (aqi <= 200) {\n      return '#FF0000'; // Unhealthy\n    } else if (aqi <= 300) {\n      return '#99004C'; // Very Unhealthy\n    } else {\n      return '#7E0023'; // Hazardous\n    }\n  };\n\n  // Run the fetch function on query change\n  useEffect(() => {\n    fetchAqiData();\n  }, [query]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(LocationPicker, {\n      onLocationSelect: setLocation\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 11\n    }, this), \"/* \", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: query,\n      onChange: e => setQuery(e.target.value),\n      placeholder: \"Enter city or location\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 16\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchAqiData,\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }, this), \" */\", /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: \"100%\",\n      height: 400,\n      children: /*#__PURE__*/_jsxDEV(BarChart, {\n        data: aqiData,\n        children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n          strokeDasharray: \"3 3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"location\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Bar, {\n          dataKey: \"aqi\",\n          fill: entry => getColorByAqi(entry.aqi)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 9\n  }, this);\n};\n_s(AQIVisualizer, \"wgcRutIDkGYCoziqROBHQZmlZWM=\");\n_c = AQIVisualizer;\nexport default AQIVisualizer;\nvar _c;\n$RefreshReg$(_c, \"AQIVisualizer\");","map":{"version":3,"names":["React","useState","useEffect","BarChart","Bar","XAxis","YAxis","Tooltip","Legend","CartesianGrid","ResponsiveContainer","jsxDEV","_jsxDEV","AQIVisualizer","_s","aqiData","setAqiData","query","setQuery","fetchAqiData","response","fetch","data","json","getColorByAqi","aqi","children","LocationPicker","onLocationSelect","setLocation","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","width","height","strokeDasharray","dataKey","fill","entry","_c","$RefreshReg$"],"sources":["C:/Users/user/Downloads/wetransfer_project_structure_2025-01-20_1815/project_structure/frontend/src/components/CurrentAQI.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import LocationPicker from './LocationPicker';\r\n// import { FaCloud } from 'react-icons/fa';\r\n\r\n// const CurrentAQI = () => {\r\n//   const [data, setData] = useState(null);\r\n//   const [location, setLocation] = useState(null);\r\n\r\n//   useEffect(() => {\r\n//     if (location) {\r\n//       fetch(`http://localhost:5000/api/current?lat=${location.lat}&lon=${location.lon}`)\r\n//         .then(res => res.json())\r\n//         .then(setData)\r\n//         .catch(console.error);\r\n//     }\r\n//   }, [location]);\r\n\r\n//   return (\r\n//     <div>\r\n//       <h2><FaCloud style={{ color: '#007bff', marginRight: '10px' }} />\r\n//       Current AQI</h2>\r\n//       <LocationPicker onLocationSelect={setLocation} />\r\n//       {data && (\r\n//         <div className=\"aqi-display\">\r\n//           <h3>AQI: {data.Final_AQI}</h3>\r\n//           <p>Category: {data.AQI_Category}</p>\r\n//           <div className=\"pollutants\">\r\n//             <h4>Pollutants</h4>\r\n//             <ul>\r\n//               <li>PM2.5: {data['PM2.5_AQI']}</li>\r\n//               <li>PM10: {data['PM10_AQI']}</li>\r\n//               <li>NO2: {data['NO2_AQI']}</li>\r\n//               <li>O3: {data['O3_AQI']}</li>\r\n//               <li>CO: {data['CO_AQI']}</li>\r\n//               <li>SO2: {data['SO2_AQI']}</li>\r\n//             </ul>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n// export default CurrentAQI;\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState, useEffect } from 'react';\r\n// import LocationPicker from './LocationPicker'; // Location Picker component\r\n// import '../styles/main.css'; // Import the CSS for custom styling\r\n\r\n// const CurrentAQI = () => {\r\n//   const [data, setData] = useState(null);\r\n//   const [location, setLocation] = useState(null);\r\n\r\n//   useEffect(() => {\r\n//     if (location) {\r\n//       fetch(`http://localhost:5000/api/current?lat=${location.lat}&lon=${location.lon}`)\r\n//         .then(res => res.json())\r\n//         .then(setData)\r\n//         .catch(console.error);\r\n//     }\r\n//   }, [location]);\r\n\r\n//   return (\r\n//     <div>\r\n//       <h2>Current AQI</h2>\r\n//       <LocationPicker onLocationSelect={setLocation} />\r\n//       {data && (\r\n//         <div className=\"aqi-display\">\r\n//           <h3>AQI: {data.Final_AQI}</h3>\r\n//           <p>Category: {data.AQI_Category}</p>\r\n//           <div className=\"pollutants\">\r\n//             <h4>Pollutants</h4>\r\n//             <ul>\r\n//               <li>PM2.5: {data['PM2.5_AQI']}</li>\r\n//               <li>PM10: {data['PM10_AQI']}</li>\r\n//               <li>NO2: {data['NO2_AQI']}</li>\r\n//               <li>O3: {data['O3_AQI']}</li>\r\n//               <li>CO: {data['CO_AQI']}</li>\r\n//               <li>SO2: {data['SO2_AQI']}</li>\r\n//             </ul>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default CurrentAQI;\r\n\r\n\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { BarChart, Bar, XAxis, YAxis, Tooltip, Legend, CartesianGrid, ResponsiveContainer } from 'recharts';\r\nimport '../styles/main.css'; // Update the path as necessary\r\n\r\nconst AQIVisualizer = () => {\r\n    const [aqiData, setAqiData] = useState([]);\r\n    const [query, setQuery] = useState('');\r\n\r\n    // Example function to fetch AQI data based on search query\r\n    const fetchAqiData = async () => {\r\n        if (query) {\r\n            // Assuming you're fetching data from an API\r\n            // Replace with the actual API call\r\n            const response = await fetch(`https://api.example.com/aqi?query=${query}`);\r\n            const data = await response.json();\r\n            setAqiData(data); // Assuming data is an array of AQI values\r\n        }\r\n    };\r\n\r\n    // Function to determine color based on AQI value\r\n    const getColorByAqi = (aqi) => {\r\n        if (aqi <= 50) {\r\n            return '#00E400'; // Good\r\n        } else if (aqi <= 100) {\r\n            return '#FFFF00'; // Moderate\r\n        } else if (aqi <= 150) {\r\n            return '#FF7E00'; // Unhealthy for Sensitive Groups\r\n        } else if (aqi <= 200) {\r\n            return '#FF0000'; // Unhealthy\r\n        } else if (aqi <= 300) {\r\n            return '#99004C'; // Very Unhealthy\r\n        } else {\r\n            return '#7E0023'; // Hazardous\r\n        }\r\n    };\r\n\r\n    // Run the fetch function on query change\r\n    useEffect(() => {\r\n        fetchAqiData();\r\n    }, [query]);\r\n\r\n    return (\r\n        <div>\r\n          <LocationPicker onLocationSelect={setLocation} />\r\n            /* <input\r\n                type=\"text\"\r\n                value={query}\r\n                onChange={(e) => setQuery(e.target.value)}\r\n                placeholder=\"Enter city or location\"\r\n            />\r\n            <button onClick={fetchAqiData}>Search</button> */\r\n\r\n            <ResponsiveContainer width=\"100%\" height={400}>\r\n                <BarChart data={aqiData}>\r\n                    <CartesianGrid strokeDasharray=\"3 3\" />\r\n                    <XAxis dataKey=\"location\" />\r\n                    <YAxis />\r\n                    <Tooltip />\r\n                    <Legend />\r\n                    <Bar dataKey=\"aqi\" fill={(entry) => getColorByAqi(entry.aqi)} />\r\n                </BarChart>\r\n            </ResponsiveContainer>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AQIVisualizer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}