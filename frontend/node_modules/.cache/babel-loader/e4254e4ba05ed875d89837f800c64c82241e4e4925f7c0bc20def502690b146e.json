{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Downloads\\\\wetransfer_project_structure_2025-01-20_1815\\\\project_structure\\\\frontend\\\\src\\\\components\\\\CurrentAQI.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import LocationPicker from './LocationPicker';\nimport { FaCloud } from 'react-icons/fa';\n\n// const CurrentAQI = () => {\n//   const [data, setData] = useState(null);\n//   const [location, setLocation] = useState(null);\n\n//   useEffect(() => {\n//     if (location) {\n//       fetch(`http://localhost:5000/api/current?lat=${location.lat}&lon=${location.lon}`)\n//         .then(res => res.json())\n//         .then(setData)\n//         .catch(console.error);\n//     }\n//   }, [location]);\n\n//   return (\n//     <div>\n//       <h2><FaCloud style={{ color: '#007bff', marginRight: '10px' }} />\n//       Current AQI</h2>\n//       <LocationPicker onLocationSelect={setLocation} />\n//       {data && (\n//         <div className=\"aqi-display\">\n//           <h3>AQI: {data.Final_AQI}</h3>\n//           <p>Category: {data.AQI_Category}</p>\n//           <div className=\"pollutants\">\n//             <h4>Pollutants</h4>\n//             <ul>\n//               <li>PM2.5: {data['PM2.5_AQI']}</li>\n//               <li>PM10: {data['PM10_AQI']}</li>\n//               <li>NO2: {data['NO2_AQI']}</li>\n//               <li>O3: {data['O3_AQI']}</li>\n//               <li>CO: {data['CO_AQI']}</li>\n//               <li>SO2: {data['SO2_AQI']}</li>\n//             </ul>\n//           </div>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n// export default CurrentAQI;\n\n// import React, { useState, useEffect } from 'react';\n// import LocationPicker from './LocationPicker'; // Location Picker component\n// import '../styles/main.css'; // Import the CSS for custom styling\n\n// const CurrentAQI = () => {\n//   const [data, setData] = useState(null);\n//   const [location, setLocation] = useState(null);\n\n//   useEffect(() => {\n//     if (location) {\n//       fetch(`http://localhost:5000/api/current?lat=${location.lat}&lon=${location.lon}`)\n//         .then(res => res.json())\n//         .then(setData)\n//         .catch(console.error);\n//     }\n//   }, [location]);\n\n//   return (\n//     <div>\n//       <h2><FaCloud style={{ color: '#007bff', marginRight: '10px' }} />\n//              Current AQI</h2>\n//       <LocationPicker onLocationSelect={setLocation} />\n//       {data && (\n//         <div className=\"aqi-display\">\n//           <h3>AQI: {data.Final_AQI}</h3>\n//           <p>Category: {data.AQI_Category}</p>\n//           <div className=\"pollutants\">\n//             <h4>Pollutants</h4>\n//             <ul>\n//               <li>PM2.5: {data['PM2.5_AQI']}</li>\n//               <li>PM10: {data['PM10_AQI']}</li>\n//               <li>NO2: {data['NO2_AQI']}</li>\n//               <li>O3: {data['O3_AQI']}</li>\n//               <li>CO: {data['CO_AQI']}</li>\n//               <li>SO2: {data['SO2_AQI']}</li>\n//             </ul>\n//           </div>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default CurrentAQI;\n\n// import React, { useState, useEffect } from 'react';\n// import LocationPicker from './LocationPicker'; // Location Picker component\n// import { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\n// import '../styles/main.css'; // Import the CSS for custom styling\n\n// const CurrentAQI = () => {\n//   const [data, setData] = useState(null);\n//   const [location, setLocation] = useState(null);\n\n//   useEffect(() => {\n//     if (location) {\n//       fetch(`http://localhost:5000/api/current?lat=${location.lat}&lon=${location.lon}`)\n//         .then(res => res.json())\n//         .then(setData)\n//         .catch(console.error);\n//     }\n//   }, [location]);\n\n//   return (\n//     <div>\n//       <h2><FaCloud style={{ color: '#007bff', marginRight: '10px' }} />\n//                    Current AQI</h2>\n//       <LocationPicker onLocationSelect={setLocation} />\n//       {data && (\n//         <div className=\"aqi-display\">\n//           <h3>AQI: {data.Final_AQI}</h3>\n//           <p>Category: {data.AQI_Category}</p>\n\n//           {/* AQI Pollutants */}\n//           <div className=\"pollutants\">\n//             <h4>Pollutants</h4>\n//             <ul>\n//               <li>PM2.5: {data['PM2.5_AQI']}</li>\n//               <li>PM10: {data['PM10_AQI']}</li>\n//               <li>NO2: {data['NO2_AQI']}</li>\n//               <li>O3: {data['O3_AQI']}</li>\n//               <li>CO: {data['CO_AQI']}</li>\n//               <li>SO2: {data['SO2_AQI']}</li>\n//             </ul>\n//           </div>\n\n//           {/* AQI Chart */}\n//           <div className=\"chart-container\">\n//             <ResponsiveContainer width=\"100%\" height={300}>\n//               <LineChart data={[\n//                 { name: 'PM2.5', value: data['PM2.5_AQI'] },\n//                 { name: 'PM10', value: data['PM10_AQI'] },\n//                 { name: 'NO2', value: data['NO2_AQI'] },\n//                 { name: 'O3', value: data['O3_AQI'] },\n//                 { name: 'CO', value: data['CO_AQI'] },\n//                 { name: 'SO2', value: data['SO2_AQI'] }\n//               ]}>\n//                 <CartesianGrid strokeDasharray=\"3 3\" />\n//                 <XAxis dataKey=\"name\" />\n//                 <YAxis />\n//                 <Tooltip />\n//                 <Legend />\n//                 <Line type=\"monotone\" dataKey=\"value\" stroke=\"#8884d8\" />\n//               </LineChart>\n//             </ResponsiveContainer>\n//           </div>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default CurrentAQI;\n\n// import React, { useState, useEffect } from 'react';\n\n// import LocationPicker from './LocationPicker'; // Location Picker component\n\n// import { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\n\n// import '../styles/main.css'; // Import the CSS for custom styling\n\n// const CurrentAQI = () => {\n\n//   const [data, setData] = useState(null);\n\n//   const [location, setLocation] = useState(null);\n\n//   useEffect(() => {\n\n//     if (location) {\n\n//       fetch(`http://localhost:5000/api/current?lat=${location.lat}&lon=${location.lon}`)\n\n//         .then(res => res.json())\n\n//         .then(setData)\n\n//         .catch(console.error);\n\n//     }\n\n//   }, [location]);\n\n//   // Function to get the color based on AQI value\n\n//   const getAQIColor = (aqi) => {\n\n//     if (aqi <= 50) return 'green';\n\n//     if (aqi <= 100) return 'yellow';\n\n//     if (aqi <= 150) return 'orange';\n\n//     if (aqi <= 200) return 'red';\n\n//     if (aqi <= 300) return 'purple';\n\n//     return 'maroon'; // For AQI above 300\n\n//   };\n\n//   return (\n\n//     <div className=\"current-aqi-container\">\n\n//       <h2 className=\"heading\"><FaCloud style={{ color: '#007bff', marginRight: '10px' }} />\n//                          Current AQI</h2>\n\n//       <LocationPicker onLocationSelect={setLocation} />\n\n//       {data && (\n\n//         <div className=\"aqi-display\" //style={{ backgroundColor: getAQIColor(data.Final_AQI) }}\n//         >\n\n//           <h3 className=\"aqi-value\">AQI: {data.Final_AQI}</h3>\n\n//           <p className=\"aqi-category\">Category: {data.AQI_Category}</p>\n\n//           {/* AQI Pollutants */}\n\n//           <div className=\"pollutants\">\n\n//             <h4>Pollutants</h4>\n\n//             <ul>\n\n//               <li>PM2.5: {data['PM2.5_AQI']}</li>\n\n//               <li>PM10: {data['PM10_AQI']}</li>\n\n//               <li>NO2: {data['NO2_AQI']}</li>\n\n//               <li>O3: {data['O3_AQI']}</li>\n\n//               <li>CO: {data['CO_AQI']}</li>\n\n//               <li>SO2: {data['SO2_AQI']}</li>\n\n//             </ul>\n\n//           </div>\n\n//           {/* AQI Chart */}\n\n//           <div className=\"chart-container\">\n\n//             <ResponsiveContainer width=\"100%\" height={300}>\n\n//               <LineChart data={[\n\n//                 { name: 'PM2.5', value: data['PM2.5_AQI'] },\n\n//                 { name: 'PM10', value: data['PM10_AQI'] },\n\n//                 { name: 'NO2', value: data['NO2_AQI'] },\n\n//                 { name: 'O3', value: data['O3_AQI'] },\n\n//                 { name: 'CO', value: data['CO_AQI'] },\n\n//                 { name: 'SO2', value: data['SO2_AQI'] }\n\n//               ]}>\n\n//                 <CartesianGrid strokeDasharray=\"3 3\" />\n\n//                 <XAxis dataKey=\"name\" />\n\n//                 <YAxis />\n\n//                 <Tooltip />\n\n//                 <Legend />\n\n//                 <Line type=\"monotone\" dataKey=\"value\" stroke=\"#8884d8\" />\n\n//               </LineChart>\n\n//             </ResponsiveContainer>\n\n//           </div>\n\n//         </div>\n\n//       )}\n\n//     </div>\n\n//   );\n\n// };\n\n// export default CurrentAQI;\n\nimport React, { useState, useEffect } from 'react';\nimport LocationPicker from './LocationPicker'; // Location Picker component\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport '../styles/main.css'; // Import the CSS for custom styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CurrentAQI = () => {\n  _s();\n  const [data, setData] = useState(null);\n  const [location, setLocation] = useState(null);\n  useEffect(() => {\n    if (location) {\n      fetch(`http://localhost:5000/api/current?lat=${location.lat}&lon=${location.lon}`).then(res => res.json()).then(setData).catch(console.error);\n    }\n  }, [location]);\n\n  // Function to get background gradient based on AQI category\n  const getBackgroundStyle = aqiCategory => {\n    switch (aqiCategory) {\n      case 'Good':\n        return {\n          background: 'linear-gradient(90deg, #e0f7e9, #b2f7c6)',\n          color: '#333'\n        };\n      case 'Moderate':\n        return {\n          background: 'linear-gradient(90deg, #fff4e0, #ffe0b2)',\n          color: '#333'\n        };\n      case 'Unhealthy for Sensitive Groups':\n        return {\n          background: 'linear-gradient(90deg, #ffe6e0, #ffb8b2)',\n          color: '#333'\n        };\n      case 'Unhealthy':\n        return {\n          background: 'linear-gradient(90deg, #ffe0f0, #ffb2d9)',\n          color: '#333'\n        };\n      case 'Very Unhealthy':\n        return {\n          background: 'linear-gradient(90deg, #f2e0ff, #d4b2ff)',\n          color: '#333'\n        };\n      case 'Hazardous':\n        return {\n          background: 'linear-gradient(90deg, #fce0e0, #ffb2b2)',\n          color: '#333'\n        };\n      default:\n        return {\n          background: 'white',\n          color: '#333'\n        };\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"current-aqi-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"heading\",\n      children: \"Current AQI\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LocationPicker, {\n      onLocationSelect: setLocation\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 7\n    }, this), data && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"aqi-display\",\n      style: getBackgroundStyle(data.AQI_Category),\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"aqi-value\",\n        children: [\"AQI: \", data.Final_AQI]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"aqi-category\",\n        children: [\"Category: \", data.AQI_Category]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pollutants\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Pollutants\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"PM2.5: \", data['PM2.5_AQI']]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 393,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"PM10: \", data['PM10_AQI']]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 394,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"NO2: \", data['NO2_AQI']]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"O3: \", data['O3_AQI']]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 396,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"CO: \", data['CO_AQI']]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 397,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"SO2: \", data['SO2_AQI']]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 398,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-container\",\n        children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n          width: \"100%\",\n          height: 300,\n          children: /*#__PURE__*/_jsxDEV(LineChart, {\n            data: [{\n              name: 'PM2.5',\n              value: data['PM2.5_AQI']\n            }, {\n              name: 'PM10',\n              value: data['PM10_AQI']\n            }, {\n              name: 'NO2',\n              value: data['NO2_AQI']\n            }, {\n              name: 'O3',\n              value: data['O3_AQI']\n            }, {\n              name: 'CO',\n              value: data['CO_AQI']\n            }, {\n              name: 'SO2',\n              value: data['SO2_AQI']\n            }],\n            children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n              strokeDasharray: \"3 3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 415,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n              dataKey: \"name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 416,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 417,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 418,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 419,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Line, {\n              type: \"monotone\",\n              dataKey: \"value\",\n              stroke: \"#8884d8\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 420,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 405,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 375,\n    columnNumber: 5\n  }, this);\n};\n_s(CurrentAQI, \"5PVvKWemhtqdq661U9aQ01HReVk=\");\n_c = CurrentAQI;\nexport default CurrentAQI;\nvar _c;\n$RefreshReg$(_c, \"CurrentAQI\");","map":{"version":3,"names":["FaCloud","React","useState","useEffect","LocationPicker","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","jsxDEV","_jsxDEV","CurrentAQI","_s","data","setData","location","setLocation","fetch","lat","lon","then","res","json","catch","console","error","getBackgroundStyle","aqiCategory","background","color","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onLocationSelect","style","AQI_Category","Final_AQI","width","height","name","value","strokeDasharray","dataKey","type","stroke","_c","$RefreshReg$"],"sources":["C:/Users/user/Downloads/wetransfer_project_structure_2025-01-20_1815/project_structure/frontend/src/components/CurrentAQI.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import LocationPicker from './LocationPicker';\r\nimport { FaCloud } from 'react-icons/fa';\r\n\r\n// const CurrentAQI = () => {\r\n//   const [data, setData] = useState(null);\r\n//   const [location, setLocation] = useState(null);\r\n\r\n//   useEffect(() => {\r\n//     if (location) {\r\n//       fetch(`http://localhost:5000/api/current?lat=${location.lat}&lon=${location.lon}`)\r\n//         .then(res => res.json())\r\n//         .then(setData)\r\n//         .catch(console.error);\r\n//     }\r\n//   }, [location]);\r\n\r\n//   return (\r\n//     <div>\r\n//       <h2><FaCloud style={{ color: '#007bff', marginRight: '10px' }} />\r\n//       Current AQI</h2>\r\n//       <LocationPicker onLocationSelect={setLocation} />\r\n//       {data && (\r\n//         <div className=\"aqi-display\">\r\n//           <h3>AQI: {data.Final_AQI}</h3>\r\n//           <p>Category: {data.AQI_Category}</p>\r\n//           <div className=\"pollutants\">\r\n//             <h4>Pollutants</h4>\r\n//             <ul>\r\n//               <li>PM2.5: {data['PM2.5_AQI']}</li>\r\n//               <li>PM10: {data['PM10_AQI']}</li>\r\n//               <li>NO2: {data['NO2_AQI']}</li>\r\n//               <li>O3: {data['O3_AQI']}</li>\r\n//               <li>CO: {data['CO_AQI']}</li>\r\n//               <li>SO2: {data['SO2_AQI']}</li>\r\n//             </ul>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n// export default CurrentAQI;\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState, useEffect } from 'react';\r\n// import LocationPicker from './LocationPicker'; // Location Picker component\r\n// import '../styles/main.css'; // Import the CSS for custom styling\r\n\r\n// const CurrentAQI = () => {\r\n//   const [data, setData] = useState(null);\r\n//   const [location, setLocation] = useState(null);\r\n\r\n//   useEffect(() => {\r\n//     if (location) {\r\n//       fetch(`http://localhost:5000/api/current?lat=${location.lat}&lon=${location.lon}`)\r\n//         .then(res => res.json())\r\n//         .then(setData)\r\n//         .catch(console.error);\r\n//     }\r\n//   }, [location]);\r\n\r\n//   return (\r\n//     <div>\r\n//       <h2><FaCloud style={{ color: '#007bff', marginRight: '10px' }} />\r\n//              Current AQI</h2>\r\n//       <LocationPicker onLocationSelect={setLocation} />\r\n//       {data && (\r\n//         <div className=\"aqi-display\">\r\n//           <h3>AQI: {data.Final_AQI}</h3>\r\n//           <p>Category: {data.AQI_Category}</p>\r\n//           <div className=\"pollutants\">\r\n//             <h4>Pollutants</h4>\r\n//             <ul>\r\n//               <li>PM2.5: {data['PM2.5_AQI']}</li>\r\n//               <li>PM10: {data['PM10_AQI']}</li>\r\n//               <li>NO2: {data['NO2_AQI']}</li>\r\n//               <li>O3: {data['O3_AQI']}</li>\r\n//               <li>CO: {data['CO_AQI']}</li>\r\n//               <li>SO2: {data['SO2_AQI']}</li>\r\n//             </ul>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default CurrentAQI;\r\n\r\n\r\n\r\n// import React, { useState, useEffect } from 'react';\r\n// import LocationPicker from './LocationPicker'; // Location Picker component\r\n// import { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\r\n// import '../styles/main.css'; // Import the CSS for custom styling\r\n\r\n// const CurrentAQI = () => {\r\n//   const [data, setData] = useState(null);\r\n//   const [location, setLocation] = useState(null);\r\n\r\n//   useEffect(() => {\r\n//     if (location) {\r\n//       fetch(`http://localhost:5000/api/current?lat=${location.lat}&lon=${location.lon}`)\r\n//         .then(res => res.json())\r\n//         .then(setData)\r\n//         .catch(console.error);\r\n//     }\r\n//   }, [location]);\r\n\r\n//   return (\r\n//     <div>\r\n//       <h2><FaCloud style={{ color: '#007bff', marginRight: '10px' }} />\r\n//                    Current AQI</h2>\r\n//       <LocationPicker onLocationSelect={setLocation} />\r\n//       {data && (\r\n//         <div className=\"aqi-display\">\r\n//           <h3>AQI: {data.Final_AQI}</h3>\r\n//           <p>Category: {data.AQI_Category}</p>\r\n          \r\n//           {/* AQI Pollutants */}\r\n//           <div className=\"pollutants\">\r\n//             <h4>Pollutants</h4>\r\n//             <ul>\r\n//               <li>PM2.5: {data['PM2.5_AQI']}</li>\r\n//               <li>PM10: {data['PM10_AQI']}</li>\r\n//               <li>NO2: {data['NO2_AQI']}</li>\r\n//               <li>O3: {data['O3_AQI']}</li>\r\n//               <li>CO: {data['CO_AQI']}</li>\r\n//               <li>SO2: {data['SO2_AQI']}</li>\r\n//             </ul>\r\n//           </div>\r\n          \r\n//           {/* AQI Chart */}\r\n//           <div className=\"chart-container\">\r\n//             <ResponsiveContainer width=\"100%\" height={300}>\r\n//               <LineChart data={[\r\n//                 { name: 'PM2.5', value: data['PM2.5_AQI'] },\r\n//                 { name: 'PM10', value: data['PM10_AQI'] },\r\n//                 { name: 'NO2', value: data['NO2_AQI'] },\r\n//                 { name: 'O3', value: data['O3_AQI'] },\r\n//                 { name: 'CO', value: data['CO_AQI'] },\r\n//                 { name: 'SO2', value: data['SO2_AQI'] }\r\n//               ]}>\r\n//                 <CartesianGrid strokeDasharray=\"3 3\" />\r\n//                 <XAxis dataKey=\"name\" />\r\n//                 <YAxis />\r\n//                 <Tooltip />\r\n//                 <Legend />\r\n//                 <Line type=\"monotone\" dataKey=\"value\" stroke=\"#8884d8\" />\r\n//               </LineChart>\r\n//             </ResponsiveContainer>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default CurrentAQI;\r\n\r\n\r\n\r\n// import React, { useState, useEffect } from 'react';\r\n\r\n// import LocationPicker from './LocationPicker'; // Location Picker component\r\n\r\n// import { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\r\n\r\n// import '../styles/main.css'; // Import the CSS for custom styling\r\n\r\n\r\n\r\n// const CurrentAQI = () => {\r\n\r\n//   const [data, setData] = useState(null);\r\n\r\n//   const [location, setLocation] = useState(null);\r\n\r\n\r\n\r\n//   useEffect(() => {\r\n\r\n//     if (location) {\r\n\r\n//       fetch(`http://localhost:5000/api/current?lat=${location.lat}&lon=${location.lon}`)\r\n\r\n//         .then(res => res.json())\r\n\r\n//         .then(setData)\r\n\r\n//         .catch(console.error);\r\n\r\n//     }\r\n\r\n//   }, [location]);\r\n\r\n\r\n\r\n//   // Function to get the color based on AQI value\r\n\r\n//   const getAQIColor = (aqi) => {\r\n\r\n//     if (aqi <= 50) return 'green';\r\n\r\n//     if (aqi <= 100) return 'yellow';\r\n\r\n//     if (aqi <= 150) return 'orange';\r\n\r\n//     if (aqi <= 200) return 'red';\r\n\r\n//     if (aqi <= 300) return 'purple';\r\n\r\n//     return 'maroon'; // For AQI above 300\r\n\r\n//   };\r\n\r\n\r\n\r\n//   return (\r\n\r\n//     <div className=\"current-aqi-container\">\r\n\r\n//       <h2 className=\"heading\"><FaCloud style={{ color: '#007bff', marginRight: '10px' }} />\r\n//                          Current AQI</h2>\r\n\r\n//       <LocationPicker onLocationSelect={setLocation} />\r\n\r\n      \r\n\r\n//       {data && (\r\n\r\n//         <div className=\"aqi-display\" //style={{ backgroundColor: getAQIColor(data.Final_AQI) }}\r\n//         >\r\n\r\n//           <h3 className=\"aqi-value\">AQI: {data.Final_AQI}</h3>\r\n\r\n//           <p className=\"aqi-category\">Category: {data.AQI_Category}</p>\r\n\r\n          \r\n\r\n//           {/* AQI Pollutants */}\r\n\r\n//           <div className=\"pollutants\">\r\n\r\n//             <h4>Pollutants</h4>\r\n\r\n//             <ul>\r\n\r\n//               <li>PM2.5: {data['PM2.5_AQI']}</li>\r\n\r\n//               <li>PM10: {data['PM10_AQI']}</li>\r\n\r\n//               <li>NO2: {data['NO2_AQI']}</li>\r\n\r\n//               <li>O3: {data['O3_AQI']}</li>\r\n\r\n//               <li>CO: {data['CO_AQI']}</li>\r\n\r\n//               <li>SO2: {data['SO2_AQI']}</li>\r\n\r\n//             </ul>\r\n\r\n//           </div>\r\n\r\n          \r\n\r\n//           {/* AQI Chart */}\r\n\r\n//           <div className=\"chart-container\">\r\n\r\n//             <ResponsiveContainer width=\"100%\" height={300}>\r\n\r\n//               <LineChart data={[\r\n\r\n//                 { name: 'PM2.5', value: data['PM2.5_AQI'] },\r\n\r\n//                 { name: 'PM10', value: data['PM10_AQI'] },\r\n\r\n//                 { name: 'NO2', value: data['NO2_AQI'] },\r\n\r\n//                 { name: 'O3', value: data['O3_AQI'] },\r\n\r\n//                 { name: 'CO', value: data['CO_AQI'] },\r\n\r\n//                 { name: 'SO2', value: data['SO2_AQI'] }\r\n\r\n//               ]}>\r\n\r\n//                 <CartesianGrid strokeDasharray=\"3 3\" />\r\n\r\n//                 <XAxis dataKey=\"name\" />\r\n\r\n//                 <YAxis />\r\n\r\n//                 <Tooltip />\r\n\r\n//                 <Legend />\r\n\r\n//                 <Line type=\"monotone\" dataKey=\"value\" stroke=\"#8884d8\" />\r\n\r\n//               </LineChart>\r\n\r\n//             </ResponsiveContainer>\r\n\r\n//           </div>\r\n\r\n//         </div>\r\n\r\n//       )}\r\n\r\n//     </div>\r\n\r\n//   );\r\n\r\n// };\r\n\r\n\r\n\r\n// export default CurrentAQI;\r\n\r\n\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport LocationPicker from './LocationPicker'; // Location Picker component\r\nimport {\r\n  LineChart,\r\n  Line,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n  ResponsiveContainer,\r\n} from 'recharts';\r\nimport '../styles/main.css'; // Import the CSS for custom styling\r\n\r\nconst CurrentAQI = () => {\r\n  const [data, setData] = useState(null);\r\n  const [location, setLocation] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (location) {\r\n      fetch(`http://localhost:5000/api/current?lat=${location.lat}&lon=${location.lon}`)\r\n        .then((res) => res.json())\r\n        .then(setData)\r\n        .catch(console.error);\r\n    }\r\n  }, [location]);\r\n\r\n  // Function to get background gradient based on AQI category\r\n  const getBackgroundStyle = (aqiCategory) => {\r\n    switch (aqiCategory) {\r\n      case 'Good':\r\n        return { background: 'linear-gradient(90deg, #e0f7e9, #b2f7c6)', color: '#333' };\r\n      case 'Moderate':\r\n        return { background: 'linear-gradient(90deg, #fff4e0, #ffe0b2)', color: '#333' };\r\n      case 'Unhealthy for Sensitive Groups':\r\n        return { background: 'linear-gradient(90deg, #ffe6e0, #ffb8b2)', color: '#333' };\r\n      case 'Unhealthy':\r\n        return { background: 'linear-gradient(90deg, #ffe0f0, #ffb2d9)', color: '#333' };\r\n      case 'Very Unhealthy':\r\n        return { background: 'linear-gradient(90deg, #f2e0ff, #d4b2ff)', color: '#333' };\r\n      case 'Hazardous':\r\n        return { background: 'linear-gradient(90deg, #fce0e0, #ffb2b2)', color: '#333' };\r\n      default:\r\n        return { background: 'white', color: '#333' };\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"current-aqi-container\">\r\n      <h2 className=\"heading\">\r\n        Current AQI\r\n      </h2>\r\n      <LocationPicker onLocationSelect={setLocation} />\r\n\r\n      {data && (\r\n        <div\r\n          className=\"aqi-display\"\r\n          style={getBackgroundStyle(data.AQI_Category)}\r\n        >\r\n          <h3 className=\"aqi-value\">AQI: {data.Final_AQI}</h3>\r\n          <p className=\"aqi-category\">Category: {data.AQI_Category}</p>\r\n\r\n          {/* AQI Pollutants */}\r\n          <div className=\"pollutants\">\r\n            <h4>Pollutants</h4>\r\n            <ul>\r\n              <li>PM2.5: {data['PM2.5_AQI']}</li>\r\n              <li>PM10: {data['PM10_AQI']}</li>\r\n              <li>NO2: {data['NO2_AQI']}</li>\r\n              <li>O3: {data['O3_AQI']}</li>\r\n              <li>CO: {data['CO_AQI']}</li>\r\n              <li>SO2: {data['SO2_AQI']}</li>\r\n            </ul>\r\n          </div>\r\n\r\n          {/* AQI Chart */}\r\n          <div className=\"chart-container\">\r\n            <ResponsiveContainer width=\"100%\" height={300}>\r\n              <LineChart\r\n                data={[\r\n                  { name: 'PM2.5', value: data['PM2.5_AQI'] },\r\n                  { name: 'PM10', value: data['PM10_AQI'] },\r\n                  { name: 'NO2', value: data['NO2_AQI'] },\r\n                  { name: 'O3', value: data['O3_AQI'] },\r\n                  { name: 'CO', value: data['CO_AQI'] },\r\n                  { name: 'SO2', value: data['SO2_AQI'] },\r\n                ]}\r\n              >\r\n                <CartesianGrid strokeDasharray=\"3 3\" />\r\n                <XAxis dataKey=\"name\" />\r\n                <YAxis />\r\n                <Tooltip />\r\n                <Legend />\r\n                <Line type=\"monotone\" dataKey=\"value\" stroke=\"#8884d8\" />\r\n              </LineChart>\r\n            </ResponsiveContainer>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CurrentAQI;\r\n\r\n\r\n\r\n"],"mappings":";;AAAA;AACA;AACA,SAASA,OAAO,QAAQ,gBAAgB;;AAExC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAMA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAIA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAIA;;AAEA;;AAEA;;AAEA;;AAIA;;AAEA;;AAEA;;AAIA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAIA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAIA;;AAEA;;AAEA;AACA;;AAEA;;AAIA;;AAEA;AACA;;AAEA;;AAEA;;AAIA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAIA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAIA;;AAIA,OAAOC,KAAK,IA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}