{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Downloads\\\\wetransfer_project_structure_2025-01-20_1815\\\\project_structure\\\\frontend\\\\src\\\\components\\\\ForecastAQI.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import LocationPicker from './LocationPicker';\n// import AQIDisplay from './AQIDisplay';\n// import { LineChart, XAxis, YAxis, Tooltip, Legend, Line, ResponsiveContainer } from 'recharts';\n// import { FaChartLine } from 'react-icons/fa';\n\n// import '../styles/main.css'; // Import the CSS for custom styling\n\n// const ForecastAQI = () => {\n//     const [data, setData] = useState(null);\n//     const [location, setLocation] = useState(null);\n\n//     useEffect(() => {\n//         if (location) {\n//             fetch(`http://localhost:5000/api/forecast?lat=${location.lat}&lon=${location.lon}`)\n//                 .then(res => res.json())\n//                 .then(setData)\n//                 .catch(console.error);\n//         }\n//     }, [location]);\n\n//     return (\n//         <div>\n//             <h2><FaChartLine style={{ color: '#00c6ff', marginRight: '10px' }} />\n//             Forecast AQI</h2>\n//             <LocationPicker onLocationSelect={setLocation} />\n//             {data && (\n//                 <>\n//                     <div className=\"chart-container\">\n//                         <ResponsiveContainer width=\"100%\" height={400}>\n//                             <LineChart data={data}>\n//                                 <XAxis dataKey=\"datetime\" />\n//                                 <YAxis />\n//                                 <Tooltip />\n//                                 <Legend />\n//                                 <Line type=\"monotone\" dataKey=\"Final_AQI\" stroke=\"#8884d8\" />\n//                             </LineChart>\n//                         </ResponsiveContainer>\n//                     </div>\n//                     <div className=\"forecast-list\">\n//                         {data.map((entry, index) => (\n//                             <AQIDisplay key={index} data={entry} />\n//                         ))}\n//                     </div>\n//                 </>\n//             )}\n//         </div>\n//     );\n// };\n\n// export default ForecastAQI;\n\nimport React, { useState, useEffect } from 'react';\nimport LocationPicker from './LocationPicker';\nimport AQIDisplay from './AQIDisplay';\nimport { LineChart, XAxis, YAxis, Tooltip, Legend, Line, ResponsiveContainer } from 'recharts';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ForecastAQI = () => {\n  _s();\n  const [data, setData] = useState(null);\n  const [location, setLocation] = useState(null);\n  useEffect(() => {\n    if (location) {\n      fetch(`http://localhost:5000/api/forecast?lat=${location.lat}&lon=${location.lon}`).then(res => res.json()).then(setData).catch(console.error);\n    }\n  }, [location]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"AQI Forecast\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(LocationPicker, {\n      onLocationSelect: setLocation\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), data && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-container\",\n        children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n          width: \"100%\",\n          height: 400,\n          children: /*#__PURE__*/_jsxDEV(LineChart, {\n            data: data,\n            children: [/*#__PURE__*/_jsxDEV(XAxis, {\n              dataKey: \"datetime\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Line, {\n              type: \"monotone\",\n              dataKey: \"Final_AQI\",\n              stroke: \"#8884d8\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"forecast-list\",\n        children: data.map((entry, index) => /*#__PURE__*/_jsxDEV(AQIDisplay, {\n          data: entry\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n};\n_s(ForecastAQI, \"5PVvKWemhtqdq661U9aQ01HReVk=\");\n_c = ForecastAQI;\nexport default ForecastAQI;\nvar _c;\n$RefreshReg$(_c, \"ForecastAQI\");","map":{"version":3,"names":["React","useState","useEffect","LocationPicker","AQIDisplay","LineChart","XAxis","YAxis","Tooltip","Legend","Line","ResponsiveContainer","jsxDEV","_jsxDEV","Fragment","_Fragment","ForecastAQI","_s","data","setData","location","setLocation","fetch","lat","lon","then","res","json","catch","console","error","children","fileName","_jsxFileName","lineNumber","columnNumber","onLocationSelect","className","width","height","dataKey","type","stroke","map","entry","index","_c","$RefreshReg$"],"sources":["C:/Users/user/Downloads/wetransfer_project_structure_2025-01-20_1815/project_structure/frontend/src/components/ForecastAQI.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import LocationPicker from './LocationPicker';\r\n// import AQIDisplay from './AQIDisplay';\r\n// import { LineChart, XAxis, YAxis, Tooltip, Legend, Line, ResponsiveContainer } from 'recharts';\r\n// import { FaChartLine } from 'react-icons/fa';\r\n\r\n// import '../styles/main.css'; // Import the CSS for custom styling\r\n\r\n// const ForecastAQI = () => {\r\n//     const [data, setData] = useState(null);\r\n//     const [location, setLocation] = useState(null);\r\n\r\n//     useEffect(() => {\r\n//         if (location) {\r\n//             fetch(`http://localhost:5000/api/forecast?lat=${location.lat}&lon=${location.lon}`)\r\n//                 .then(res => res.json())\r\n//                 .then(setData)\r\n//                 .catch(console.error);\r\n//         }\r\n//     }, [location]);\r\n\r\n//     return (\r\n//         <div>\r\n//             <h2><FaChartLine style={{ color: '#00c6ff', marginRight: '10px' }} />\r\n//             Forecast AQI</h2>\r\n//             <LocationPicker onLocationSelect={setLocation} />\r\n//             {data && (\r\n//                 <>\r\n//                     <div className=\"chart-container\">\r\n//                         <ResponsiveContainer width=\"100%\" height={400}>\r\n//                             <LineChart data={data}>\r\n//                                 <XAxis dataKey=\"datetime\" />\r\n//                                 <YAxis />\r\n//                                 <Tooltip />\r\n//                                 <Legend />\r\n//                                 <Line type=\"monotone\" dataKey=\"Final_AQI\" stroke=\"#8884d8\" />\r\n//                             </LineChart>\r\n//                         </ResponsiveContainer>\r\n//                     </div>\r\n//                     <div className=\"forecast-list\">\r\n//                         {data.map((entry, index) => (\r\n//                             <AQIDisplay key={index} data={entry} />\r\n//                         ))}\r\n//                     </div>\r\n//                 </>\r\n//             )}\r\n//         </div>\r\n//     );\r\n// };\r\n\r\n// export default ForecastAQI;\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport LocationPicker from './LocationPicker';\r\nimport AQIDisplay from './AQIDisplay';\r\nimport { LineChart, XAxis, YAxis, Tooltip, Legend, Line, ResponsiveContainer } from 'recharts';\r\n\r\nconst ForecastAQI = () => {\r\n    const [data, setData] = useState(null);\r\n    const [location, setLocation] = useState(null);\r\n\r\n    useEffect(() => {\r\n        if (location) {\r\n            fetch(`http://localhost:5000/api/forecast?lat=${location.lat}&lon=${location.lon}`)\r\n                .then(res => res.json())\r\n                .then(setData)\r\n                .catch(console.error);\r\n        }\r\n    }, [location]);\r\n\r\n    return (\r\n        <div>\r\n            <h2>AQI Forecast</h2>\r\n            <LocationPicker onLocationSelect={setLocation} />\r\n            {data && (\r\n                <>\r\n                    <div className=\"chart-container\">\r\n                        <ResponsiveContainer width=\"100%\" height={400}>\r\n                            <LineChart data={data}>\r\n                                <XAxis dataKey=\"datetime\" />\r\n                                <YAxis />\r\n                                <Tooltip />\r\n                                <Legend />\r\n                                <Line type=\"monotone\" dataKey=\"Final_AQI\" stroke=\"#8884d8\" />\r\n                            </LineChart>\r\n                        </ResponsiveContainer>\r\n                    </div>\r\n                    <div className=\"forecast-list\">\r\n                        {data.map((entry, index) => (\r\n                            <AQIDisplay key={index} data={entry} />\r\n                        ))}\r\n                    </div>\r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ForecastAQI;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}