{"ast":null,"code":"// import { FaHistory } from 'react-icons/fa';\n// import React, { useState } from 'react';\n// import LocationPicker from './LocationPicker';\n// import AQIDisplay from './AQIDisplay';\n// import { LineChart, XAxis, YAxis, Tooltip, Legend, Line, ResponsiveContainer } from 'recharts';\n\n// // const HistoricalAQI = () => {\n// //     const [data, setData] = useState(null);\n// //     const [location, setLocation] = useState(null);\n// //     const [date, setDate] = useState('');\n\n// //     const fetchData = () => {\n// //         if (location && date) {\n// //             const start = Math.floor(new Date(date).getTime() / 1000);\n// //             const end = start + (24 * 60 * 60);\n\n// //             fetch(`http://localhost:5000/api/historical?lat=${location.lat}&lon=${location.lon}&start=${start}&end=${end}`)\n// //                 .then(res => res.json())\n// //                 .then(setData)\n// //                 .catch(console.error);\n// //         }\n// //     };\n\n// //     return (\n// //         <div>\n// //             <h2><FaHistory style={{ color: '#ff6b6b', marginRight: '10px' }} />\n// //             Historical AQI</h2>\n// //             <div className=\"controls\">\n// //                 <LocationPicker onLocationSelect={setLocation} />\n// //                 <input\n// //                     type=\"date\"\n// //                     value={date}\n// //                     onChange={(e) => setDate(e.target.value)}\n// //                     className=\"date-picker\"\n\n// //                 />\n// //                 <button onClick={fetchData}>Get Data</button>\n// //             </div>\n// //              {data && (\n// //                 <>\n// //                     <div className=\"chart-container\">\n// //                         <ResponsiveContainer width=\"100%\" height={400}>\n// //                             <LineChart data={data}>\n// //                                 <XAxis dataKey=\"datetime\" />\n// //                                 <YAxis />\n// //                                 <Tooltip />\n// //                                 <Legend />\n// //                                 <Line type=\"monotone\" dataKey=\"Final_AQI\" stroke=\"#8884d8\" />\n// //                             </LineChart>\n// //                         </ResponsiveContainer>\n// //                     </div>\n// //                     <div className=\"historical-list\">\n// //                         {data.map((entry, index) => (\n// //                             <AQIDisplay key={index} data={entry} />\n// //                         ))}\n// //                     </div>\n// //                 </>\n// //             )}\n// //         </div>\n\n// //     );\n// // };\n\n// // export default HistoricalAQI;\n\n// const HistoricalAQI = () => {\n//     const [data, setData] = useState(null);\n//     const [location, setLocation] = useState(null);\n//     const [date, setDate] = useState('');\n\n//     const fetchData = () => {\n//         if (location && date) {\n//             const start = Math.floor(new Date(date).getTime() / 1000);\n//             const end = start + (24 * 60 * 60);\n\n//             fetch(`http://localhost:5000/api/historical?lat=${location.lat}&lon=${location.lon}&start=${start}&end=${end}`)\n//                 .then(res => res.json())\n//                 .then(setData)\n//                 .catch(console.error);\n//         }\n//     };\n\n//     const getAQIColor = (aqi) => {\n//         if (aqi <= 50) return 'good';\n//         if (aqi <= 100) return 'moderate';\n//         if (aqi <= 150) return 'sensitive';\n//         if (aqi <= 200) return 'unhealthy';\n//         if (aqi <= 300) return 'very-unhealthy';\n//         return 'hazardous';\n//     };\n\n//     return (\n//         <div>\n//             <h2><FaHistory style={{ color: '#ff6b6b', marginRight: '10px' }} />\n//                          Historical AQI</h2>\n//             <div className=\"controls\">\n//                 <LocationPicker onLocationSelect={setLocation} />\n//                 <input\n//                     type=\"date\"\n//                     value={date}\n//                     onChange={(e) => setDate(e.target.value)}\n//                     className=\"date-picker\"\n//                 />\n//                 <button onClick={fetchData}>Get Data</button>\n//             </div>\n//             {data && (\n//                 <>\n//                     <div className=\"chart-container\">\n//                         <ResponsiveContainer width=\"100%\" height={400}>\n//                             <LineChart data={data}>\n//                                 <XAxis dataKey=\"datetime\" />\n//                                 <YAxis />\n//                                 <Tooltip />\n//                                 <Legend />\n//                                 <Line type=\"monotone\" dataKey=\"Final_AQI\" stroke=\"#8884d8\" />\n//                             </LineChart>\n//                         </ResponsiveContainer>\n//                     </div>\n//                     <div className=\"historical-list\">\n//                         {data.map((entry, index) => (\n//                             <div \n//                                 key={index} \n//                                 className={`aqi-display  ${getAQIColor(entry.Final_AQI)}`}\n//                             >\n//                                 <AQIDisplay data={entry} />\n//                             </div>\n//                         ))}\n//                     </div>\n//                 </>\n//             )}\n//         </div>\n//     );\n// };\n\n// export default HistoricalAQI;","map":{"version":3,"names":[],"sources":["C:/Users/user/Downloads/wetransfer_project_structure_2025-01-20_1815/project_structure/frontend/src/components/HistoricalAQI.js"],"sourcesContent":["// import { FaHistory } from 'react-icons/fa';\r\n// import React, { useState } from 'react';\r\n// import LocationPicker from './LocationPicker';\r\n// import AQIDisplay from './AQIDisplay';\r\n// import { LineChart, XAxis, YAxis, Tooltip, Legend, Line, ResponsiveContainer } from 'recharts';\r\n\r\n// // const HistoricalAQI = () => {\r\n// //     const [data, setData] = useState(null);\r\n// //     const [location, setLocation] = useState(null);\r\n// //     const [date, setDate] = useState('');\r\n\r\n// //     const fetchData = () => {\r\n// //         if (location && date) {\r\n// //             const start = Math.floor(new Date(date).getTime() / 1000);\r\n// //             const end = start + (24 * 60 * 60);\r\n            \r\n// //             fetch(`http://localhost:5000/api/historical?lat=${location.lat}&lon=${location.lon}&start=${start}&end=${end}`)\r\n// //                 .then(res => res.json())\r\n// //                 .then(setData)\r\n// //                 .catch(console.error);\r\n// //         }\r\n// //     };\r\n\r\n// //     return (\r\n// //         <div>\r\n// //             <h2><FaHistory style={{ color: '#ff6b6b', marginRight: '10px' }} />\r\n// //             Historical AQI</h2>\r\n// //             <div className=\"controls\">\r\n// //                 <LocationPicker onLocationSelect={setLocation} />\r\n// //                 <input\r\n// //                     type=\"date\"\r\n// //                     value={date}\r\n// //                     onChange={(e) => setDate(e.target.value)}\r\n// //                     className=\"date-picker\"\r\n\r\n// //                 />\r\n// //                 <button onClick={fetchData}>Get Data</button>\r\n// //             </div>\r\n// //              {data && (\r\n// //                 <>\r\n// //                     <div className=\"chart-container\">\r\n// //                         <ResponsiveContainer width=\"100%\" height={400}>\r\n// //                             <LineChart data={data}>\r\n// //                                 <XAxis dataKey=\"datetime\" />\r\n// //                                 <YAxis />\r\n// //                                 <Tooltip />\r\n// //                                 <Legend />\r\n// //                                 <Line type=\"monotone\" dataKey=\"Final_AQI\" stroke=\"#8884d8\" />\r\n// //                             </LineChart>\r\n// //                         </ResponsiveContainer>\r\n// //                     </div>\r\n// //                     <div className=\"historical-list\">\r\n// //                         {data.map((entry, index) => (\r\n// //                             <AQIDisplay key={index} data={entry} />\r\n// //                         ))}\r\n// //                     </div>\r\n// //                 </>\r\n// //             )}\r\n// //         </div>\r\n\r\n        \r\n// //     );\r\n// // };\r\n\r\n// // export default HistoricalAQI;\r\n\r\n\r\n// const HistoricalAQI = () => {\r\n//     const [data, setData] = useState(null);\r\n//     const [location, setLocation] = useState(null);\r\n//     const [date, setDate] = useState('');\r\n\r\n//     const fetchData = () => {\r\n//         if (location && date) {\r\n//             const start = Math.floor(new Date(date).getTime() / 1000);\r\n//             const end = start + (24 * 60 * 60);\r\n            \r\n//             fetch(`http://localhost:5000/api/historical?lat=${location.lat}&lon=${location.lon}&start=${start}&end=${end}`)\r\n//                 .then(res => res.json())\r\n//                 .then(setData)\r\n//                 .catch(console.error);\r\n//         }\r\n//     };\r\n\r\n//     const getAQIColor = (aqi) => {\r\n//         if (aqi <= 50) return 'good';\r\n//         if (aqi <= 100) return 'moderate';\r\n//         if (aqi <= 150) return 'sensitive';\r\n//         if (aqi <= 200) return 'unhealthy';\r\n//         if (aqi <= 300) return 'very-unhealthy';\r\n//         return 'hazardous';\r\n//     };\r\n\r\n//     return (\r\n//         <div>\r\n//             <h2><FaHistory style={{ color: '#ff6b6b', marginRight: '10px' }} />\r\n//                          Historical AQI</h2>\r\n//             <div className=\"controls\">\r\n//                 <LocationPicker onLocationSelect={setLocation} />\r\n//                 <input\r\n//                     type=\"date\"\r\n//                     value={date}\r\n//                     onChange={(e) => setDate(e.target.value)}\r\n//                     className=\"date-picker\"\r\n//                 />\r\n//                 <button onClick={fetchData}>Get Data</button>\r\n//             </div>\r\n//             {data && (\r\n//                 <>\r\n//                     <div className=\"chart-container\">\r\n//                         <ResponsiveContainer width=\"100%\" height={400}>\r\n//                             <LineChart data={data}>\r\n//                                 <XAxis dataKey=\"datetime\" />\r\n//                                 <YAxis />\r\n//                                 <Tooltip />\r\n//                                 <Legend />\r\n//                                 <Line type=\"monotone\" dataKey=\"Final_AQI\" stroke=\"#8884d8\" />\r\n//                             </LineChart>\r\n//                         </ResponsiveContainer>\r\n//                     </div>\r\n//                     <div className=\"historical-list\">\r\n//                         {data.map((entry, index) => (\r\n//                             <div \r\n//                                 key={index} \r\n//                                 className={`aqi-display  ${getAQIColor(entry.Final_AQI)}`}\r\n//                             >\r\n//                                 <AQIDisplay data={entry} />\r\n//                             </div>\r\n//                         ))}\r\n//                     </div>\r\n//                 </>\r\n//             )}\r\n//         </div>\r\n//     );\r\n// };\r\n\r\n// export default HistoricalAQI;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}