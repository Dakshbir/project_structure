{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Downloads\\\\wetransfer_project_structure_2025-01-20_1815\\\\project_structure\\\\frontend\\\\src\\\\components\\\\HistoricalAQI.js\";\n// import React, { useState } from 'react';\n// import LocationPicker from './LocationPicker';\n// import AQIDisplay from './AQIDisplay';\n// import { LineChart, XAxis, YAxis, Tooltip, Legend, Line, ResponsiveContainer } from 'recharts';\n\n// const HistoricalAQI = () => {\n//     const [data, setData] = useState(null);\n//     const [location, setLocation] = useState(null);\n//     const [date, setDate] = useState('');\n\n//     const fetchData = () => {\n//         if (location && date) {\n//             const start = Math.floor(new Date(date).getTime() / 1000);\n//             const end = start + (24 * 60 * 60);\n\n//             fetch(`http://localhost:5000/api/historical?lat=${location.lat}&lon=${location.lon}&start=${start}&end=${end}`)\n//                 .then(res => res.json())\n//                 .then(setData)\n//                 .catch(console.error);\n//         }\n//     };\n\n//     return (\n//         <div>\n//             <h2>Historical AQI</h2>\n//             <div className=\"controls\">\n//                 <LocationPicker onLocationSelect={setLocation} />\n//                 <input\n//                     type=\"date\"\n//                     value={date}\n//                     onChange={(e) => setDate(e.target.value)}\n//                     className=\"date-picker\"\n//                 />\n//                 <button onClick={fetchData}>Get Data</button>\n//             </div>\n//             {data && (\n//                 <>\n//                     <div className=\"chart-container\">\n//                         <ResponsiveContainer width=\"100%\" height={400}>\n//                             <LineChart data={data}>\n//                                 <XAxis dataKey=\"datetime\" />\n//                                 <YAxis />\n//                                 <Tooltip />\n//                                 <Legend />\n//                                 <Line type=\"monotone\" dataKey=\"Final_AQI\" stroke=\"#8884d8\" />\n//                             </LineChart>\n//                         </ResponsiveContainer>\n//                     </div>\n//                     <div className=\"historical-list\">\n//                         {data.map((entry, index) => (\n//                             <AQIDisplay key={index} data={entry} />\n//                         ))}\n//                     </div>\n//                 </>\n//             )}\n//         </div>\n//     );\n// };\n\n// export default HistoricalAQI;\n\nimport React from 'react';\nimport { FaHistory } from 'react-icons/fa';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HistoricalAQI = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [/*#__PURE__*/_jsxDEV(FaHistory, {\n        style: {\n          color: '#ff6b6b',\n          marginRight: '10px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), \"Historical AQI\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_c = HistoricalAQI;\nexport default HistoricalAQI;\nvar _c;\n$RefreshReg$(_c, \"HistoricalAQI\");","map":{"version":3,"names":["React","FaHistory","jsxDEV","_jsxDEV","HistoricalAQI","children","style","color","marginRight","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/user/Downloads/wetransfer_project_structure_2025-01-20_1815/project_structure/frontend/src/components/HistoricalAQI.js"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import LocationPicker from './LocationPicker';\r\n// import AQIDisplay from './AQIDisplay';\r\n// import { LineChart, XAxis, YAxis, Tooltip, Legend, Line, ResponsiveContainer } from 'recharts';\r\n\r\n// const HistoricalAQI = () => {\r\n//     const [data, setData] = useState(null);\r\n//     const [location, setLocation] = useState(null);\r\n//     const [date, setDate] = useState('');\r\n\r\n//     const fetchData = () => {\r\n//         if (location && date) {\r\n//             const start = Math.floor(new Date(date).getTime() / 1000);\r\n//             const end = start + (24 * 60 * 60);\r\n            \r\n//             fetch(`http://localhost:5000/api/historical?lat=${location.lat}&lon=${location.lon}&start=${start}&end=${end}`)\r\n//                 .then(res => res.json())\r\n//                 .then(setData)\r\n//                 .catch(console.error);\r\n//         }\r\n//     };\r\n\r\n//     return (\r\n//         <div>\r\n//             <h2>Historical AQI</h2>\r\n//             <div className=\"controls\">\r\n//                 <LocationPicker onLocationSelect={setLocation} />\r\n//                 <input\r\n//                     type=\"date\"\r\n//                     value={date}\r\n//                     onChange={(e) => setDate(e.target.value)}\r\n//                     className=\"date-picker\"\r\n//                 />\r\n//                 <button onClick={fetchData}>Get Data</button>\r\n//             </div>\r\n//             {data && (\r\n//                 <>\r\n//                     <div className=\"chart-container\">\r\n//                         <ResponsiveContainer width=\"100%\" height={400}>\r\n//                             <LineChart data={data}>\r\n//                                 <XAxis dataKey=\"datetime\" />\r\n//                                 <YAxis />\r\n//                                 <Tooltip />\r\n//                                 <Legend />\r\n//                                 <Line type=\"monotone\" dataKey=\"Final_AQI\" stroke=\"#8884d8\" />\r\n//                             </LineChart>\r\n//                         </ResponsiveContainer>\r\n//                     </div>\r\n//                     <div className=\"historical-list\">\r\n//                         {data.map((entry, index) => (\r\n//                             <AQIDisplay key={index} data={entry} />\r\n//                         ))}\r\n//                     </div>\r\n//                 </>\r\n//             )}\r\n//         </div>\r\n//     );\r\n// };\r\n\r\n// export default HistoricalAQI;\r\n\r\n\r\nimport React from 'react';\r\nimport { FaHistory } from 'react-icons/fa';\r\n\r\nconst HistoricalAQI = () => {\r\n  return (\r\n    <div>\r\n      <h2>\r\n        <FaHistory style={{ color: '#ff6b6b', marginRight: '10px' }} />\r\n        Historical AQI\r\n      </h2>\r\n      {/* Content for Historical AQI */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HistoricalAQI;"],"mappings":";AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAC1B,oBACED,OAAA;IAAAE,QAAA,eACEF,OAAA;MAAAE,QAAA,gBACEF,OAAA,CAACF,SAAS;QAACK,KAAK,EAAE;UAAEC,KAAK,EAAE,SAAS;UAAEC,WAAW,EAAE;QAAO;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,kBAEjE;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEF,CAAC;AAEV,CAAC;AAACC,EAAA,GAVIT,aAAa;AAYnB,eAAeA,aAAa;AAAC,IAAAS,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}