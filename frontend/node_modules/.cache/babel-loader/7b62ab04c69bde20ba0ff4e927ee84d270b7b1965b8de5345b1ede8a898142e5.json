{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Downloads\\\\wetransfer_project_structure_2025-01-20_1815\\\\project_structure\\\\frontend\\\\src\\\\components\\\\HistoricalAQI.js\",\n  _s = $RefreshSig$();\nimport { FaHistory } from 'react-icons/fa';\nimport React, { useState } from 'react';\nimport LocationPicker from './LocationPicker';\nimport AQIDisplay from './AQIDisplay';\nimport { LineChart, XAxis, YAxis, Tooltip, Legend, Line, ResponsiveContainer } from 'recharts';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst HistoricalAQI = () => {\n  _s();\n  const [data, setData] = useState(null);\n  const [location, setLocation] = useState(null);\n  const [date, setDate] = useState('');\n  const fetchData = () => {\n    if (location && date) {\n      const start = Math.floor(new Date(date).getTime() / 1000);\n      const end = start + 24 * 60 * 60;\n      fetch(`http://localhost:5000/api/historical?lat=${location.lat}&lon=${location.lon}&start=${start}&end=${end}`).then(res => res.json()).then(setData).catch(console.error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [/*#__PURE__*/_jsxDEV(FaHistory, {\n        style: {\n          color: '#ff6b6b',\n          marginRight: '10px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), \"Historical AQI\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: [/*#__PURE__*/_jsxDEV(LocationPicker, {\n        onLocationSelect: setLocation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        value: date,\n        onChange: e => setDate(e.target.value),\n        className: \"date-picker\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchData,\n        children: \"Get Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), \"//             \", data && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-container\",\n        children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n          width: \"100%\",\n          height: 400,\n          children: /*#__PURE__*/_jsxDEV(LineChart, {\n            data: data,\n            children: [/*#__PURE__*/_jsxDEV(XAxis, {\n              dataKey: \"datetime\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Line, {\n              type: \"monotone\",\n              dataKey: \"Final_AQI\",\n              stroke: \"#8884d8\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"historical-list\",\n        children: data.map((entry, index) => /*#__PURE__*/_jsxDEV(AQIDisplay, {\n          data: entry\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n_s(HistoricalAQI, \"QZADOAAn93XJ+8rBBICib066oTU=\");\n_c = HistoricalAQI;\nexport default HistoricalAQI;\n\n// import { FaHistory } from 'react-icons/fa';\n// import React, { useState } from 'react';\n// import LocationPicker from './LocationPicker';\n// import AQIDisplay from './AQIDisplay';\n// import { LineChart, XAxis, YAxis, Tooltip, Legend, Line, ResponsiveContainer } from 'recharts';\n// import '../styles/main.css'; // Import the CSS for custom styling\n\n// const HistoricalAQI = () => {\n//   const [data, setData] = useState(null);\n//   const [location, setLocation] = useState(null);\n//   const [date, setDate] = useState('');\n\n//   const fetchData = () => {\n//     if (location && date) {\n//       const start = Math.floor(new Date(date).getTime() / 1000);\n//       const end = start + (24 * 60 * 60);\n\n//       fetch(`http://localhost:5000/api/historical?lat=${location.lat}&lon=${location.lon}&start=${start}&end=${end}`)\n//         .then(res => res.json())\n//         .then(setData)\n//         .catch(console.error);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h2><FaHistory style={{ color: '#ff6b6b', marginRight: '10px' }} />\n//         Historical AQI</h2>\n//       <div className=\"controls\">\n//         <LocationPicker onLocationSelect={setLocation} />\n//         <input\n//           type=\"date\"\n//           value={date}\n//           onChange={(e) => setDate(e.target.value)}\n//           className=\"date-picker\" // Applying custom styling for the date picker\n//         />\n//         <button onClick={fetchData} className=\"fetch-btn\">Get Data</button>\n//       </div>\n//       {data && (\n//         <>\n//           <div className=\"chart-container\">\n//             {/* Chart rendering */}\n//           </div>\n//           <div className=\"historical-list\">\n//             {data.map((entry, index) => (\n//               <AQIDisplay key={index} data={entry} />\n//             ))}\n//           </div>\n//         </>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default HistoricalAQI;\nvar _c;\n$RefreshReg$(_c, \"HistoricalAQI\");","map":{"version":3,"names":["FaHistory","React","useState","LocationPicker","AQIDisplay","LineChart","XAxis","YAxis","Tooltip","Legend","Line","ResponsiveContainer","jsxDEV","_jsxDEV","Fragment","_Fragment","HistoricalAQI","_s","data","setData","location","setLocation","date","setDate","fetchData","start","Math","floor","Date","getTime","end","fetch","lat","lon","then","res","json","catch","console","error","children","style","color","marginRight","fileName","_jsxFileName","lineNumber","columnNumber","className","onLocationSelect","type","value","onChange","e","target","onClick","width","height","dataKey","stroke","map","entry","index","_c","$RefreshReg$"],"sources":["C:/Users/user/Downloads/wetransfer_project_structure_2025-01-20_1815/project_structure/frontend/src/components/HistoricalAQI.js"],"sourcesContent":["import { FaHistory } from 'react-icons/fa';\r\nimport React, { useState } from 'react';\r\nimport LocationPicker from './LocationPicker';\r\nimport AQIDisplay from './AQIDisplay';\r\nimport { LineChart, XAxis, YAxis, Tooltip, Legend, Line, ResponsiveContainer } from 'recharts';\r\n\r\nconst HistoricalAQI = () => {\r\n    const [data, setData] = useState(null);\r\n    const [location, setLocation] = useState(null);\r\n    const [date, setDate] = useState('');\r\n\r\n    const fetchData = () => {\r\n        if (location && date) {\r\n            const start = Math.floor(new Date(date).getTime() / 1000);\r\n            const end = start + (24 * 60 * 60);\r\n            \r\n            fetch(`http://localhost:5000/api/historical?lat=${location.lat}&lon=${location.lon}&start=${start}&end=${end}`)\r\n                .then(res => res.json())\r\n                .then(setData)\r\n                .catch(console.error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2><FaHistory style={{ color: '#ff6b6b', marginRight: '10px' }} />\r\n            Historical AQI</h2>\r\n            <div className=\"controls\">\r\n                <LocationPicker onLocationSelect={setLocation} />\r\n                <input\r\n                    type=\"date\"\r\n                    value={date}\r\n                    onChange={(e) => setDate(e.target.value)}\r\n                    className=\"date-picker\"\r\n\r\n                />\r\n                <button onClick={fetchData}>Get Data</button>\r\n            </div>\r\n//             {data && (\r\n                <>\r\n                    <div className=\"chart-container\">\r\n                        <ResponsiveContainer width=\"100%\" height={400}>\r\n                            <LineChart data={data}>\r\n                                <XAxis dataKey=\"datetime\" />\r\n                                <YAxis />\r\n                                <Tooltip />\r\n                                <Legend />\r\n                                <Line type=\"monotone\" dataKey=\"Final_AQI\" stroke=\"#8884d8\" />\r\n                            </LineChart>\r\n                        </ResponsiveContainer>\r\n                    </div>\r\n                    <div className=\"historical-list\">\r\n                        {data.map((entry, index) => (\r\n                            <AQIDisplay key={index} data={entry} />\r\n                        ))}\r\n                    </div>\r\n                </>\r\n            )}\r\n        </div>\r\n\r\n        \r\n    );\r\n};\r\n\r\nexport default HistoricalAQI;\r\n\r\n\r\n\r\n// import { FaHistory } from 'react-icons/fa';\r\n// import React, { useState } from 'react';\r\n// import LocationPicker from './LocationPicker';\r\n// import AQIDisplay from './AQIDisplay';\r\n// import { LineChart, XAxis, YAxis, Tooltip, Legend, Line, ResponsiveContainer } from 'recharts';\r\n// import '../styles/main.css'; // Import the CSS for custom styling\r\n\r\n// const HistoricalAQI = () => {\r\n//   const [data, setData] = useState(null);\r\n//   const [location, setLocation] = useState(null);\r\n//   const [date, setDate] = useState('');\r\n\r\n//   const fetchData = () => {\r\n//     if (location && date) {\r\n//       const start = Math.floor(new Date(date).getTime() / 1000);\r\n//       const end = start + (24 * 60 * 60);\r\n      \r\n//       fetch(`http://localhost:5000/api/historical?lat=${location.lat}&lon=${location.lon}&start=${start}&end=${end}`)\r\n//         .then(res => res.json())\r\n//         .then(setData)\r\n//         .catch(console.error);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <h2><FaHistory style={{ color: '#ff6b6b', marginRight: '10px' }} />\r\n//         Historical AQI</h2>\r\n//       <div className=\"controls\">\r\n//         <LocationPicker onLocationSelect={setLocation} />\r\n//         <input\r\n//           type=\"date\"\r\n//           value={date}\r\n//           onChange={(e) => setDate(e.target.value)}\r\n//           className=\"date-picker\" // Applying custom styling for the date picker\r\n//         />\r\n//         <button onClick={fetchData} className=\"fetch-btn\">Get Data</button>\r\n//       </div>\r\n//       {data && (\r\n//         <>\r\n//           <div className=\"chart-container\">\r\n//             {/* Chart rendering */}\r\n//           </div>\r\n//           <div className=\"historical-list\">\r\n//             {data.map((entry, index) => (\r\n//               <AQIDisplay key={index} data={entry} />\r\n//             ))}\r\n//           </div>\r\n//         </>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default HistoricalAQI;\r\n\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}